/__w/mn-samples-ogc/mn-samples-ogc/site/documents/18-053r2/document.err errors


== AsciiDoc Input

(ID _references): Section not marked up as [bibliography]!
	#<Asciidoctor::Section@4943980 {level: 1, title: "References", blocks: 1}>


== Style

(): Abstract is missing!
(): Keywords are missing!
(): Submitting Organizations is missing!
(): Submitters is missing!


== Metanorma XML Style Warning

(XML Line 000237): Table should have title
	<table id="_546417c2-d956-dc6c-7d48-9fba75d06820" unnumbered="true"><thead><tr><th valign="middle" align="left">Format</th>
	<th valign="middle" align="left">Uses</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><xref target="_Batched_3D_Model">Batched 3D Model (b3dm)</xref></td>
	<td valign="middle" align="left">Heterogeneous 3D models. E.g. textured terrain and surfaces, 3D building exteriors and interiors, massive models.</td>
(XML Line 000321): Hanging paragraph in clause
	<clause id="tiles" obligation="normative">
	<title>Tiles</title>
	<p id="_ae27e061-81ec-9a85-fd35-05a6a36610a9">Tiles consist of metadata used to determine if a tile is rendered, a reference to the renderable content, and an array of any children tiles.</p>
	
	<clause id="_geometric_error_2" obligation="normative">
(XML Line 000336): Hanging paragraph in clause
	<clause id="_Refinement" obligation="normative">
	<title>Refinement</title>
	<p id="_572eeb2b-c6d6-ffb7-5ae9-323e73c444ee"><bookmark id="replacement"/>Refinement determines the process by which a lower resolution parent tile renders when its higher resolution children are selected to be rendered. Permitted refinement types are replacement (<tt>”REPLACE”</tt>) and additive (<tt>”ADD”</tt>). If the tile has replacement refinement, the children tiles are rendered in place of the parent, that is, the parent tile is no longer rendered. If the tile has additive refinement, the children are rendered in addition to the parent tile.</p>
	
	<p id="_033f09b8-ff4d-1228-f1a4-973adeba0a9a">A tileset can use replacement refinement exclusively, additive refinement exclusively, or any combination of additive and replacement refinement.</p>
(XML Line 000379): Hanging paragraph in clause
	<clause id="_Bounding_volumes" obligation="normative">
	<title>Bounding volumes</title>
	<p id="_f931e570-17a8-41f8-709d-a751070112bc">A bounding volume defines the spatial extent enclosing a tile or a tile’s content. To support tight fitting volumes for a variety of datasets such as regularly divided terrain, cities not aligned with a line of latitude or longitude, or arbitrary point clouds, the bounding volume types include an oriented bounding box, a bounding sphere, and a geographic region defined by minimum and maximum latitudes, longitudes, and heights.</p>
	
	<p id="_8f70f29c-7983-8179-90ff-0a5766c25556">Bounding box</p>
(XML Line 000550): Hanging paragraph in clause
	<clause id="_glTF_transforms" obligation="normative">
	<title>glTF transforms</title>
	<p id="_46a75c19-8202-8dde-e89d-d211ff164256"><xref target="_Batched_3D_Model">Batched 3D Model</xref> and <xref target="_Instanced_3D_Model">Instanced 3D Model</xref> tiles embed glTF, which defines its own node hierarchy and uses a <stem type="MathML"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>y</mi></math></stem>-up coordinate system. Any transforms specific to a tile format and the <tt>tile.transform</tt> property are applied after these transforms are resolved.</p>
	
	<clause id="_glTF_node_hierarchy" obligation="normative">
(XML Line 000768): Hanging paragraph in clause
	<clause id="refinement" obligation="normative">
	<title>Tileset JSON</title>
	<p id="_22680ff0-becf-fb46-2006-f14cd88eeed4">3D Tiles uses one main tileset JSON file as the entry point to define a tileset. Both entry and external tileset JSON files are not required to follow a specific naming convention.</p>
	
	<p id="_15227b4a-3595-53e5-f642-ea78a7908700">Here is a subset of the tileset JSON used for <link target="http://cesiumjs.org/CanaryWharf/">Canary Wharf</link> (also see the complete file, <link target="../../../../../ggetz/Documents/examples/tileset.json">tileset.json</link>):</p>
(XML Line 000859): Hanging paragraph in clause
	<clause id="_Spatial_data_structures" obligation="normative">
	<title>Spatial data structures</title>
	<p id="_3368e5fa-ee5c-9802-4ae5-2cd66a206dc8">3D Tiles incorporates the concept of Hierarchical Level of Detail (HLOD) for optimal rendering of spatial data. A tileset is composed of a tree, defined by root and, recursively, its <tt>children</tt> tiles, which can be organized by different types of spatial data structures.</p>
	
	<p id="_a545db43-36d2-9c11-e56a-3863ef5cfa82">A runtime engine is generic and will render any tree defined by a tileset. Any combination of tile formats and refinement approaches can be used, enabling flexibility in supporting heterogeneous datasets, see <xref target="_Refinement">Refinement</xref>.</p>
(XML Line 000917): Hanging paragraph in clause
	<clause id="_specifying_extensions_and_application_specific_extras" obligation="normative">
	<title>Specifying extensions and application specific extras</title>
	<p id="_fc4b5659-e8f0-aa1b-f0fc-50da4829aa69">3D Tiles defines extensions to allow the base specification to have extensibility for new features, as well as extras to allow for application specific metadata.</p>
	
	<clause id="_extensions" obligation="normative">
(XML Line 001004): Table should have title
	<table id="_4b9ee0d1-414f-e426-2eda-1886053edbbb" unnumbered="true"><thead><tr><th valign="middle" align="left">Format</th>
	<th valign="middle" align="left">Uses</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><xref target="_Batched_3D_Model">Batched 3D Model</xref></td>
	<td valign="middle" align="left">Heterogeneous 3D models. E.g. textured terrain and surfaces, 3D building exteriors and interiors, massive models.</td>
(XML Line 001024): Hanging paragraph in clause
	<clause id="tileset" obligation="normative">
	<title>Tileset</title>
	<p id="_6288d1fb-ecdb-3b1b-bfa5-6191fb5fad2f">A 3D Tiles tileset.</p>
	
	<p id="_1d566df8-695e-28b6-d748-b5f242d2464a"><strong>Properties</strong></p>
(XML Line 001030): Table should have title
	<table id="_da329943-28a3-3882-d303-7bc6cca38e27" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>asset</strong></td>
(XML Line 001170): Hanging paragraph in clause
	<clause id="asset" obligation="normative">
	<title>Asset</title>
	<p id="_8f45ed91-234b-0da4-3bba-ea66a608f215">Metadata about the entire tileset.</p>
	
	<p id="_b457a53f-ca27-6cbb-a06f-f50ad3f58a7f"><strong>Properties</strong></p>
(XML Line 001176): Table should have title
	<table id="_40f6c11f-e4e0-924b-5ef1-e7e50035e7d4" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>version</strong></td>
(XML Line 001248): Hanging paragraph in clause
	<clause id="bounding-volume" obligation="normative">
	<title>Bounding Volume</title>
	<p id="_153edf75-ea24-ba57-c898-af621aa7f171">A bounding volume that encloses a tile or its content. Exactly one <tt>box</tt>, <tt>region</tt>, or <tt>sphere</tt> property is required.</p>
	
	<p id="_37a38bed-6c6c-1d0c-75a7-99e051503165"><strong>Properties</strong></p>
(XML Line 001254): Table should have title
	<table id="_1af736b4-d3fa-5f43-95ea-56286ced32c6" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>box</strong></td>
(XML Line 001357): Hanging paragraph in clause
	<clause id="properties" obligation="normative">
	<title>Properties</title>
	<p id="_8c68ebb3-8f9a-809e-bad8-6d9b4666eae5">A dictionary object of metadata about per-feature properties.</p>
	
	<p id="_07315a61-e162-4477-43f4-5a3f262691dc"><strong>Properties</strong></p>
(XML Line 001363): Table should have title
	<table id="_93ae195f-97ae-1b1e-9752-819ee4c3005d" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>maximum</strong></td>
(XML Line 001435): Hanging paragraph in clause
	<clause id="tile" obligation="normative">
	<title>Tile</title>
	<p id="_dbbf98a9-07bc-ce8f-e6ef-04e477df73fa">A tile in a 3D Tiles tileset.</p>
	
	<p id="_03625be6-7741-e34b-47c2-66280b58ebbf"><strong>Properties</strong></p>
(XML Line 001441): Table should have title
	<table id="_462cf463-a93c-c176-8ad2-455a2e69c5f9" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>boundingVolume</strong></td>
(XML Line 001600): Hanging paragraph in clause
	<clause id="tile-content" obligation="normative">
	<title>Tile Content</title>
	<p id="_62c589ad-b27a-8c47-1620-85deab9cd48f">Metadata about the tile’s content and a link to the content.</p>
	
	<p id="_66d647ce-13bc-f652-8678-ed76392eba28"><strong>Properties</strong></p>
(XML Line 001606): Table should have title
	<table id="_ab6e70d2-6b96-4445-4ff6-092713bbab33" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>boundingVolume</strong></td>
(XML Line 001690): Hanging paragraph in clause
	<clause id="layout" obligation="normative">
	<title>Layout</title>
	<p id="_19e4d590-a7f4-0993-07ea-dfb3322de334">A Feature Table is composed of two parts: a JSON header and an optional binary body in little endian. The JSON property names are tile format-specific semantics, and their values can either be defined directly in the JSON, or refer to sections in the binary body. It is more efficient to store long numeric arrays in the binary body. The following figure shows the Feature Table layout:</p>
	
	<figure id="fig20">
(XML Line 001765): Hanging paragraph in clause
	<clause id="feature-table-1" obligation="normative">
	<title>Feature Table</title>
	<p id="_0d61929e-e13b-24bf-9ad9-cc2c526b1cbc">A set of semantics containing per-tile and per-feature values defining the position and appearance properties for features in a tile.</p>
	
	<p id="_50ba8bae-d832-11d5-15eb-4957fa3ba47d"><strong>Properties</strong></p>
(XML Line 001771): Table should have title
	<table id="_88944509-3d8d-8681-17b9-76f0e1e55de7" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>extensions</strong></td>
(XML Line 001817): Hanging paragraph in clause
	<clause id="_BinaryBodyReference_2" obligation="normative">
	<title>BinaryBodyReference</title>
	<p id="_085698d3-0ad7-326a-133a-5bd04fc93945">An object defining the reference to a section of the binary body of the features table where the property values are stored if not defined directly in the JSON.</p>
	
	<p id="_b4c85e75-ff28-674a-603c-dd9ecbbe9def"><strong>Properties</strong></p>
(XML Line 001823): Table should have title
	<table id="_f04b84e9-157a-3ba9-e79d-10f6a0492497" unnumbered="true" width="100%"><tbody><tr><td valign="middle" align="left"/><td valign="middle" align="left">Type</td>
	<td valign="middle" align="left">Description</td>
	<td valign="middle" align="left">Required</td>
	</tr><tr><td valign="middle" align="left"><strong>byteOffset</strong></td>
	<td valign="middle" align="left"><tt>number</tt></td>
(XML Line 001873): Hanging paragraph in clause
	<clause id="_layout" obligation="normative">
	<title>Layout</title>
	<p id="_d93b573c-a34d-2973-e9a3-c31b8b40889e">A Batch Table is composed of two parts: a JSON header and an optional binary body in little endian. The JSON describes the properties, whose values either can be defined directly in the JSON as an array, or can refer to sections in the binary body. It is more efficient to store long numeric arrays in the binary body. The following figure shows the Batch Table layout:</p>
	
	<figure id="fig22">
(XML Line 001958): Table should have title
	<table id="_3b119e3b-e497-2b65-2267-e11f32e4f934" unnumbered="true"><thead><tr><th valign="middle" align="left">componentType</th>
	<th valign="middle" align="left">Size in bytes</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><tt>"BYTE"</tt></td>
	<td valign="middle" align="left">1</td>
(XML Line 002045): Hanging paragraph in clause
	<clause id="batch-table-1" obligation="normative">
	<title>Batch Table</title>
	<p id="_3261ff18-a494-edaf-445b-fd35aed0eda7">A set of properties defining application-specific metadata for features in a tile.</p>
	
	<p id="_d0ad6012-6eb5-e422-e92b-d21b89bf3a33"><strong>Properties</strong></p>
(XML Line 002051): Table should have title
	<table id="_9273932b-f75f-c009-a357-fd36e240a704" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>extensions</strong></td>
(XML Line 002097): Hanging paragraph in clause
	<clause id="binarybodyreference_9" obligation="normative">
	<title>BinaryBodyReference</title>
	<p id="_83463c32-c070-717d-b114-f5b8c5c9b584">An object defining the reference to a section of the binary body of the batch table where the property values are stored if not defined directly in the JSON.</p>
	
	<p id="_7cf59e50-3df9-fb20-7a60-cbe9a2e335da"><strong>Properties</strong></p>
(XML Line 002103): Table should have title
	<table id="_b2d4e8ef-3d18-479a-31ee-f91cd2f0458b" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>byteOffset</strong></td>
(XML Line 002197): Hanging paragraph in clause
	<clause id="_Tile_format_specifications" obligation="normative">
	<title>Tile format specifications</title>
	<p id="_46a06ef5-d835-dc10-cfd3-8ef60ee578a0">Each tile’s <tt>content.uri</tt> property points to a tile that is one of the formats listed in the table below.</p>
	
	<table id="_d0ca9f9e-1fd3-73ce-fd7a-90479ae35037" unnumbered="true"><thead><tr><th valign="middle" align="left">Format</th>
(XML Line 002201): Table should have title
	<table id="_d0ca9f9e-1fd3-73ce-fd7a-90479ae35037" unnumbered="true"><thead><tr><th valign="middle" align="left">Format</th>
	<th valign="middle" align="left">Uses</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left">Batched 3D Model (<tt>b3dm</tt>)</td>
	<td valign="middle" align="left">Heterogeneous 3D models. E.g. textured terrain and surfaces, 3D building exteriors and interiors, massive models.</td>
(XML Line 002228): Hanging paragraph in clause
	<clause id="_layout_2" obligation="normative">
	<title>Layout</title>
	<p id="_11e6a85e-10b6-b1bb-56c4-4aa41a37bb67">A tile is composed of two sections: a header immediately followed by a body. The following figure shows the Batched 3D Model layout (dashes indicate optional fields):</p>
	
	<figure id="fig24">
(XML Line 002248): Table should have title
	<table id="_439cfa95-24af-4d63-a5fa-72967caa5a36" unnumbered="true"><thead><tr><th valign="middle" align="left">Field name</th>
	<th valign="middle" align="left">Data type</th>
	<th valign="middle" align="left">Description</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><tt>magic</tt></td>
(XML Line 002279): Hanging paragraph in clause
	<clause id="_feature_table" obligation="normative">
	<title>Feature Table</title>
	<p id="_8e9dbf3c-a2bf-3e6f-354f-2e18c7cbd8f6">Contains values for <tt>b3dm</tt> semantics.</p>
	
	<p id="_7d12928a-a5f6-56b5-9f9f-c079e063c448">More information is available in the <xref target="_Feature_Table">Feature Table specification</xref>.</p>
(XML Line 002296): Table should have title
	<table id="_2ad3473a-be6c-920f-011e-cb9a599da2ad" unnumbered="true"><thead><tr><th valign="middle" align="left">Semantic</th>
	<th valign="middle" align="left">Data Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
(XML Line 002322): Hanging paragraph in clause
	<clause id="_Binary_glTF" obligation="normative">
	<title>Binary glTF</title>
	<p id="_aa61fc1b-fe68-4248-15d0-f2b389672a17">Batched 3D Model embeds <link target="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0">glTF 2.0</link> containing model geometry and texture information.</p>
	
	<p id="_7f709162-5f06-11de-795a-1acf4e807760">The <link target="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#binary-gltf-layout">binary glTF</link> immediately follows the Feature Table and Batch Table. It may embed all of its geometry, texture, and animations, or it may refer to external sources for some or all of these data.</p>
(XML Line 002386): Hanging paragraph in clause
	<clause id="_implementation_example_2" obligation="normative">
	<title>Implementation example</title>
	<p id="_b17ce67a-1a90-d37d-70c3-4f24c4194ac8"><em>This section is non-normative</em></p>
	
	<p id="_ac9f398d-226d-40c9-8743-02004d755239">Code for reading the header can be found in <link target="https://github.com/AnalyticalGraphicsInc/cesium/blob/master/Source/Scene/Batched3DModel3DTileContent.js">Batched3DModelTileContent.js</link> in the Cesium implementation of 3D Tiles.</p>
(XML Line 002394): Hanging paragraph in clause
	<clause id="batched-3d-model-feature-table" obligation="normative">
	<title>Batched 3D Model Feature Table</title>
	<p id="_b40b1005-a5b9-f23c-97a6-0f857c198600">A set of Batched 3D Model semantics that contain additional information about features in a tile.</p>
	
	<p id="_665e9b4d-890c-deb7-8db7-516f8a83f9e3"><strong>Properties</strong></p>
(XML Line 002400): Table should have title
	<table id="_cc10df46-9430-722b-ad07-791ea811de72" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>extensions</strong></td>
(XML Line 002476): Hanging paragraph in clause
	<clause id="binarybodyreference_10_1" obligation="normative">
	<title>BinaryBodyReference</title>
	<p id="_2504b19d-1358-d45b-b9f7-cd1171b26956">An object defining the reference to a section of the binary body of the features table where the property values are stored if not defined directly in the JSON.</p>
	
	<p id="_761a7017-9bf5-17a9-8950-eaa0ff4a6227"><strong>Properties</strong></p>
(XML Line 002482): Table should have title
	<table id="_991f1fa4-1a45-0976-74cb-2263d0f6db14" unnumbered="true" width="100%"><tbody><tr><td valign="middle" align="left"/><td valign="middle" align="left">Type</td>
	<td valign="middle" align="left">Description</td>
	<td valign="middle" align="left">Required</td>
	</tr><tr><td valign="middle" align="left"><strong>byteOffset</strong></td>
	<td valign="middle" align="left"><tt>number</tt></td>
(XML Line 002541): Hanging paragraph in clause
	<clause id="_layout_3" obligation="normative">
	<title>Layout</title>
	<p id="_5ad590bb-2239-da87-d98d-df0796c094ed">A tile is composed of a header section immediately followed by a binary body. The following figure shows the Instanced 3D Model layout (dashes indicate optional fields):</p>
	
	<figure id="fig25">
(XML Line 002563): Table should have title
	<table id="_f116fd2e-3572-e6f0-5425-eb3b1a2a6cc9" unnumbered="true"><thead><tr><th valign="middle" align="left">Field name</th>
	<th valign="middle" align="left">Data type</th>
	<th valign="middle" align="left">Description</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><tt>magic</tt></td>
(XML Line 002597): Hanging paragraph in clause
	<clause id="_feature_table_2" obligation="normative">
	<title>Feature Table</title>
	<p id="_239f7ed1-5d7e-21d8-ff6a-966cfa411cd7">The Feature Table contains values for <tt>i3dm</tt> semantics used to create instanced models.
	More information is available in the <xref target="_Feature_Table">Feature Table specification</xref>.</p>
	
(XML Line 002615): Table should have title
	<table id="_f0620c60-1bdf-b9b7-ff18-b249900ac30f" unnumbered="true"><thead><tr><th valign="middle" align="left">Semantic</th>
	<th valign="middle" align="left">Data Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
(XML Line 002664): Table should have title
	<table id="_1dfb0b2a-771e-6f31-e065-6270a3993a65" unnumbered="true"><thead><tr><th valign="middle" align="left">Semantic</th>
	<th valign="middle" align="left">Data Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
(XML Line 002696): Hanging paragraph in clause
	<clause id="instance-orientation" obligation="normative">
	<title>Instance orientation</title>
	<p id="_8e9f42a7-c46b-a2d8-2df1-ec6374812e0d">An instance’s orientation is defined by an orthonormal basis created by an <tt>up</tt> and <tt>right</tt> vector. The orientation will be transformed by the <xref target="tile-transform">Tile transform</xref>.</p>
	
	<p id="_f95b051a-fc87-03b3-e709-0e1fe02bca3a">The <tt>x</tt> vector in the standard basis maps to the <tt>right</tt> vector in the transformed basis, and the <tt>y</tt> vector maps to the <tt>up</tt> vector.<br/>
(XML Line 002726): Hanging paragraph in clause
	<clause id="instance-position" obligation="normative">
	<title>Instance position</title>
	<p id="_bc94d2ab-bba6-9bd9-e025-0b36a4b7e5dd"><tt>POSITION</tt> defines the location for an instance before any tile transforms are applied.</p>
	
	<clause id="rtc_center" obligation="normative">
(XML Line 002761): Hanging paragraph in clause
	<clause id="examples" obligation="normative">
	<title>Examples</title>
	<p id="_6b724466-21a4-946b-4cd0-cf05c5353978">These examples show how to generate JSON and binary buffers for the Feature Table.</p>
	
	<clause id="positions-only" obligation="normative">
(XML Line 002837): Hanging paragraph in clause
	<clause id="gltf" obligation="normative">
	<title>glTF</title>
	<p id="_ae441aca-10e0-0a8e-5946-59106d30ba77">Instanced 3D Model embeds glTF 2.0 containing model geometry and texture information.</p>
	
	<p id="_dee7ea73-1be0-eef5-df50-33ab1eb1d0ca">The glTF asset to be instanced is stored after the Feature Table and Batch Table. It may embed all of its geometry, texture, and animations, or it may refer to external sources for some or all of these data.</p>
(XML Line 002868): Hanging paragraph in clause
	<clause id="instanced-3d-model-feature-table" obligation="normative">
	<title>Instanced 3D Model Feature Table</title>
	<p id="_b665698b-8071-9e73-9564-8eec89825a27">A set of Instanced 3D Model semantics that contains values defining the position and appearance properties for instanced models in a tile.</p>
	
	<p id="_72a1e8fe-80dd-267e-dfd0-0f9e5a2ad86f"><strong>Properties</strong></p>
(XML Line 002874): Table should have title
	<table id="_b2e5f0f2-d445-0673-a7bf-afca1984bad4" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>extensions</strong></td>
(XML Line 003100): Hanging paragraph in clause
	<clause id="binarybodyreference_10_2" obligation="normative">
	<title>BinaryBodyReference</title>
	<p id="_8206b34c-00e7-bd79-1d1b-884577bf3f03">An object defining the reference to a section of the binary body of the features table where the property values are stored if not defined directly in the JSON.</p>
	
	<p id="_49325814-19f3-7aef-52dd-abdb2e0ea545"><strong>Properties</strong></p>
(XML Line 003106): Table should have title
	<table id="_05f85d2c-36d6-2e08-a6d0-b22a8dc08c13" unnumbered="true" width="100%"><tbody><tr><td valign="middle" align="left"/><td valign="middle" align="left">Type</td>
	<td valign="middle" align="left">Description</td>
	<td valign="middle" align="left">Required</td>
	</tr><tr><td valign="middle" align="left"><strong>byteOffset</strong></td>
	<td valign="middle" align="left"><tt>number</tt></td>
(XML Line 003160): Hanging paragraph in clause
	<clause id="_layout_4" obligation="normative">
	<title>Layout</title>
	<p id="_ddca44d9-b4ff-244f-85c8-6fc1cde8b1d5">A tile is composed of a header section immediately followed by a body section. The following figure shows the Point Cloud layout (dashes indicate optional fields):</p>
	
	<figure id="fig29">
(XML Line 003178): Table should have title
	<table id="_5ac5a2c4-f270-9cb3-e77a-689216e8d22a" unnumbered="true"><thead><tr><th valign="middle" align="left">Field name</th>
	<th valign="middle" align="left">Data type</th>
	<th valign="middle" align="left">Description</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><tt>magic</tt></td>
(XML Line 003209): Hanging paragraph in clause
	<clause id="_feature_table_3" obligation="normative">
	<title>Feature Table</title>
	<p id="_67767ed9-ab1a-652a-987d-d1f902602455">Contains per-tile and per-point values that define where and how to render points.<br/>
	More information is available in the <xref target="_Feature_Table">Feature Table</xref> specification.</p>
	
(XML Line 003225): Table should have title
	<table id="_cf8a7e24-6c66-6aeb-db0a-5767445cf0d2" unnumbered="true"><thead><tr><th valign="middle" align="left">Semantic</th>
	<th valign="middle" align="left">Data Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
(XML Line 003270): Table should have title
	<table id="_e022c423-c1f5-35ab-3056-33a9f2970bf0" unnumbered="true"><thead><tr><th valign="middle" align="left">Semantic</th>
	<th valign="middle" align="left">Data Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
(XML Line 003306): Hanging paragraph in clause
	<clause id="point-positions" obligation="normative">
	<title>Point positions</title>
	<p id="_fcf03d64-8274-a694-f9e8-a48797882863"><tt>POSITION</tt> defines the position for a point before any tileset transforms are applied.</p>
	
	<clause id="_coordinate_reference_system_crs" obligation="normative">
(XML Line 003349): Hanging paragraph in clause
	<clause id="point-normals" obligation="normative">
	<title>Point normals</title>
	<p id="_1ca12c7a-b579-c765-c784-c04fe94a6df8">Per-point normals are an optional property that can help improve the visual quality of points by enabling lighting, hidden surface removal, and other rendering techniques.<br/>
	The normals will be transformed using the inverse transpose of the tileset transform.</p>
	
(XML Line 003371): Hanging paragraph in clause
	<clause id="_Examples" obligation="normative">
	<title>Examples</title>
	<p id="_813a37ed-d947-73ed-aaa6-d62c76852fa9"><em>This section is non-normative</em></p>
	
	<p id="_10d9f87b-aad7-e5db-f29b-c0179e4fdea4">These examples show how to generate JSON and binary buffers for the Feature Table.</p>
(XML Line 003557): Hanging paragraph in clause
	<clause id="point-cloud-feature-table" obligation="normative">
	<title>Point Cloud Feature Table</title>
	<p id="_89b403b3-d955-6199-3cbd-e79e5c513cfb">A set of Point Cloud semantics that contains values defining the position and appearance properties for points in a tile.</p>
	
	<p id="_0b934af4-73d6-1208-dbf0-9aecc7c0b58e"><strong>Properties</strong></p>
(XML Line 003563): Table should have title
	<table id="_e2c56142-d4b3-2e64-a0c6-42e2c4e77041" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>extensions</strong></td>
(XML Line 003819): Hanging paragraph in clause
	<clause id="binarybodyreference_10_3" obligation="normative">
	<title>BinaryBodyReference</title>
	<p id="_e0ac93d3-69d8-c12a-6950-b8ce659cb3ee">An object defining the reference to a section of the binary body of the features table where the property values are stored if not defined directly in the JSON.</p>
	
	<p id="_f600166f-16b8-0f7a-cecf-9a80b95e1ca3"><strong>Properties</strong></p>
(XML Line 003825): Table should have title
	<table id="_0a785afc-caa5-c4d1-70f7-0bbe3cfdd05d" unnumbered="true" width="100%"><tbody><tr><td valign="middle" align="left"/><td valign="middle" align="left">Type</td>
	<td valign="middle" align="left">Description</td>
	<td valign="middle" align="left">Required</td>
	</tr><tr><td valign="middle" align="left"><strong>byteOffset</strong></td>
	<td valign="middle" align="left"><tt>number</tt></td>
(XML Line 003886): Hanging paragraph in clause
	<clause id="_layout_5" obligation="normative">
	<title>Layout</title>
	<p id="_e1761ff4-137c-0ace-e03e-372a4026f76d">Composite layout (dashes indicate optional fields):</p>
	
	<figure id="fig31">
(XML Line 003904): Table should have title
	<table id="_041074e3-8119-d259-ba26-8149cede7de5" unnumbered="true"><thead><tr><th valign="middle" align="left">Field name</th>
	<th valign="middle" align="left">Data type</th>
	<th valign="middle" align="left">Description</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><tt>magic</tt></td>
(XML Line 003936): Table should have title
	<table id="_7338be9a-2a50-e704-78d2-56f8957c0485" unnumbered="true"><thead><tr><th valign="middle" align="left">Field name</th>
	<th valign="middle" align="left">Data type</th>
	<th valign="middle" align="left">Description</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><tt>magic</tt></td>
(XML Line 004150): Hanging paragraph in clause
	<clause id="expressions" obligation="normative">
	<title>Expressions</title>
	<p id="_6c2e78b4-e266-9c5d-4ba7-999dd3dff77f">The language for expressions is a small subset of JavaScript ( <link target="http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf">EMCAScript 5</link>), plus native vector and regular expression types and access to tileset feature properties in the form of readonly variables.</p>
	
	<p id="_d9dec05f-3958-4af6-0567-47f73e3717ea"><strong>Implementation Note:</strong> Cesium uses the <link target="http://jsep.from.so/">jsep</link> JavaScript expression parser library to parse style expressions into an <link target="https://en.wikipedia.org/wiki/Abstract_syntax_tree">abstract syntax tree (AST)</link>.</p>
(XML Line 004188): Hanging paragraph in clause
	<clause id="types" obligation="normative">
	<title>Types</title>
	<p id="_15d2f787-4583-83fe-f7ca-060dbc521cd8">The following types are supported:</p>
	
	<ul id="_9a7cf320-ae40-e88c-f04d-9d2f4e09bf48"><li><p id="_38a1ec81-e2ce-16ea-3e31-cf2c70fd5ef9"><tt>Boolean</tt></p>
(XML Line 004253): Hanging paragraph in clause
	<clause id="_Vector" obligation="normative">
	<title>Vector</title>
	<p id="_c4571770-27b4-ec92-b6e8-84b20758391c">The styling language includes 2, 3, and 4 component floating-point vector types: <tt>vec2</tt>, <tt>vec3</tt>, and <tt>vec4</tt>. Vector constructors share the same rules as GLSL:</p>
	
	<clause id="vec2" obligation="normative">
(XML Line 004614): Hanging paragraph in clause
	<clause id="constants" obligation="normative">
	<title>Constants</title>
	<p id="_d899a868-e15e-5a38-5da8-88848b98e50c">The following constants are supported by the styling language:</p>
	
	<clause id="pi" obligation="normative">
(XML Line 004682): Table should have title
	<table id="_d42d7c15-2853-a36e-5b1a-f0e722506b25" unnumbered="true"><thead><tr><th valign="middle" align="left"><tt>componentType</tt></th>
	<th valign="middle" align="left">variable type</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><tt>"VEC2"</tt></td>
	<td valign="middle" align="left"><tt>vec2</tt></td>
(XML Line 004768): Hanging paragraph in clause
	<clause id="built-in-functions" obligation="normative">
	<title>Built-in functions</title>
	<p id="_e64bcc3e-4df7-06a6-adfa-f9bd42c294fd">The following built-in functions are supported by the styling language. Many of the built-in functions take either scalars or vectors as arguments. For vector arguments the function is applied component-wise and the resulting vector is returned.</p>
	
	<clause id="abs" obligation="normative">
(XML Line 005310): Hanging paragraph in clause
	<clause id="style" obligation="normative">
	<title>style</title>
	<p id="_6e433699-026d-5183-d56f-4f3e2d59a92e">A 3D Tiles style.</p>
	
	<p id="_26807db6-64b4-7d03-b4c7-af29cb8c5654"><strong>Properties</strong></p>
(XML Line 005316): Table should have title
	<table id="_139c6d7c-e3ab-0389-e1ca-88b4f139ddca" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>defines</strong></td>
(XML Line 005400): Hanging paragraph in clause
	<clause id="conditions-1" obligation="normative">
	<title>conditions</title>
	<p id="_b0e8e21a-d6f3-5abe-30c4-9bb7e7434fe6">A series of conditions evaluated in order, like a series of if…​else statements that result in an expression being evaluated.</p>
	
	<p id="_918f19c9-e3a7-c841-7095-0a80504188aa"><strong>Properties</strong></p>
(XML Line 005406): Table should have title
	<table id="_fd4843ea-286f-a9be-f7ae-ec36f938b244" unnumbered="true" width="100%"><tbody><tr><td valign="middle" align="left"/><td valign="middle" align="left">Type</td>
	<td valign="middle" align="left">Description</td>
	<td valign="middle" align="left">Required</td>
	</tr><tr><td valign="middle" align="left"><strong>conditions</strong></td>
	<td valign="middle" align="left"><tt>array[]</tt></td>
(XML Line 005456): Hanging paragraph in clause
	<clause id="point-cloud-style" obligation="normative">
	<title>Point Cloud Style</title>
	<p id="_f397fc88-6d4a-8fcc-cb17-d3cd29ac0ba8">A 3D Tiles style with additional properties for Point Clouds.</p>
	
	<p id="_10fcfbe4-05c3-67f6-27e2-7d2b504b6c7a"><strong>Properties</strong></p>
(XML Line 005462): Table should have title
	<table id="_e79ad733-a1f8-dd7f-e8f3-161582621a2f" unnumbered="true" width="100%"><thead><tr><th valign="middle" align="left"/><th valign="middle" align="left">Type</th>
	<th valign="middle" align="left">Description</th>
	<th valign="middle" align="left">Required</th>
	</tr></thead>
	<tbody><tr><td valign="middle" align="left"><strong>defines</strong></td>
(XML Line 005587): Table should have title
	<table id="_1f2d9269-cf58-05ef-1183-193d5b5560a3" unnumbered="true"><thead><tr><th valign="middle" align="left"><em>Date</em></th>
	<th valign="middle" align="left"><em>Release</em></th>
	<th valign="middle" align="left"><em>Author</em></th>
	<th valign="middle" align="left"><em>Description</em></th>
	</tr></thead>


== Metanorma XML Syntax

(XML Line 000013:229): character content of element "from" invalid; must be a year
(XML Line 000139:95): element "clause" not allowed here; expected the element end-tag or element "submitters"
(XML Line 000145:69): element "clause" not allowed here; expected the element end-tag or element "submitters"
(XML Line 000148:61): element "clause" not allowed here; expected the element end-tag or element "submitters"
(XML Line 000153:102): element "clause" not allowed here; expected the element end-tag or element "submitters"
(XML Line 000201:174): element "fn" not allowed here; expected the element end-tag, text or element "add", "bookmark", "br", "concept", "del", "em", "eref", "hi", "hr", "image", "index", "index-xref", "keyword", "link", "note", "pagebreak", "ruby", "smallcap", "span", "stem", "strike", "strong", "sub", "sup", "svg", "tt", "underline" or "xref"
(XML Line 000230:330): element "fn" not allowed here; expected the element end-tag, text or element "add", "bookmark", "br", "concept", "del", "em", "eref", "hi", "hr", "image", "index", "index-xref", "keyword", "link", "note", "pagebreak", "ruby", "smallcap", "span", "stem", "strike", "strong", "sub", "sup", "svg", "tt", "underline" or "xref"
(XML Line 005723:123): element "docidentifier" not allowed yet; missing required element "title"
(XML Line 005757:173): element "docidentifier" not allowed yet; missing required element "title"
